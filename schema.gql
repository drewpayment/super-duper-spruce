# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Mutation {
  addProperty(property: PropertyInput!): Property!
  updateProperty(property: PropertyInput!): Property!
}

type Property {
  address: String!
  city: String!
  createdAt: DateTime!
  goLiveDate: DateTime!
  id: String!
  isLive: Boolean!
  legacyId: Int!
  name: String!
  numberOfUnits: Int!
  state: String!
  updatedAt: DateTime
  zip: String!
}

input PropertyInput {
  address: String
  city: String
  createdAt: DateTime
  goLiveDate: DateTime
  id: String
  isLive: Boolean
  legacyId: Int
  name: String
  numberOfUnits: Int
  state: String
  updatedAt: DateTime
  zip: String
}

type Query {
  getProperty(address: String, city: String, goLiveDate: DateTime, goLiveDateType: SearchDateType, isLive: Boolean, legacyId: Int, modernId: String, name: String, numberOfUnits: Int, state: String, zip: String): [Property!]!
  hello: String!
}

"""Search date options"""
enum SearchDateType {
  equals
  greaterThan
  greaterThanOrEqualTo
  lessThan
  lessThanOrEqualTo
}
